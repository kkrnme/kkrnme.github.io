{"version":3,"sources":["webpack:///./src/components/blog/LinkToPost.tsx","webpack:///./src/pages/blog/index.tsx"],"names":["to","title","excerpt","status","type","pattern","GeoPattern","generate","className","css","backgroundImage","toDataUrl","TagLabel","toUpperCase","props","children","err","__filename","pageQuery","BlogIndex","posts","data","allSitePage","edges","map","post","node","key","context","id","undefined","path"],"mappings":"qSAMe,gBAA2D,IAAxDA,EAAwD,EAAxDA,GAAIC,EAAoD,EAApDA,MAAOC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,KACtCC,EAAUC,IAAWC,SAASN,GACpC,OACE,mBAAKO,UAAU,4DACb,YAAC,IAAD,CACER,GAAIA,EACJQ,UAAU,0GACVC,IAAG,YAAE,CACHC,gBAAiBL,EAAQM,eAG3B,kBAAIH,UAAU,qBACXP,EACW,UAAXE,EACC,YAACS,EAAD,CAAUJ,UAAU,sBAApB,SACE,KACJ,YAACI,EAAD,CAAUJ,UAAS,SAAWJ,GAASA,EAAKS,iBAGhD,iBACEL,UAAU,qCACVC,IAAG,GAMFP,KAeT,IAAMU,EAAoC,SAAAE,GAAK,OAC7C,qBACEN,UAAS,iDAAmDM,EAAMN,WAEjEM,EAAMC,Y,kCCpDX,+GAgCMC,EAAM,8BAA8BC,EAE7BC,EAAY,aA2BVC,UAvDG,SAAC,GAAuC,IAClDC,EADkD,EAArCC,KACAC,YAAYC,MAC/B,OACE,YAAC,IAAD,KACE,kBAAIf,UAAU,kCAAd,eACA,uBAASA,UAAU,OACjB,kBAAIA,UAAU,uCACXY,EAAMI,KAAI,4DAASC,EAAT,EAAGC,KAAH,OACT,kBACElB,UAAU,+BACVmB,IAAG,oBAAEF,EAAKG,eAAP,uBAAE,EAAcH,YAAhB,uBAAE,EAAoBC,YAAtB,aAAE,EAA0BG,UAA5B,aAAkCC,GAErC,YAAC,IAAD,CACE9B,GAAE,oBAAEyB,EAAKG,eAAP,uBAAE,EAAcH,YAAhB,uBAAE,EAAoBC,YAAtB,aAAE,EAA0BK,YAA5B,QAAoCf,EACtCf,MAAK,oBAAEwB,EAAKG,eAAP,uBAAE,EAAcH,YAAhB,uBAAE,EAAoBC,YAAtB,aAAE,EAA0BzB,aAA5B,QAAqCe,EAC1Cd,QAAO,oBAAEuB,EAAKG,eAAP,uBAAE,EAAcH,YAAhB,uBAAE,EAAoBC,YAAtB,aAAE,EAA0BxB,eAA5B,QAAuCc,EAC9Cb,OAAM,oBAAEsB,EAAKG,eAAP,uBAAE,EAAcH,YAAhB,uBAAE,EAAoBC,YAAtB,aAAE,EAA0BvB,cAA5B,QAAsCa,EAC5CZ,KAAI,UAAEqB,EAAKG,eAAP,uBAAE,EAAcH,YAAhB,aAAE,EAAoBrB,gB","file":"component---src-pages-blog-index-tsx-a4447a300d33dd901d0e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { InterpolationWithTheme } from \"@emotion/core\"\nimport Post from \"../../utils/PostType\"\nimport GeoPattern from \"geopattern\"\n\nexport default ({ to, title, excerpt, status, type }: LinkToPostProps) => {\n  const pattern = GeoPattern.generate(title)\n  return (\n    <div className=\"shadow-md rounded rounded-tl-none overflow-hidden h-full\">\n      <Link\n        to={to}\n        className=\"block no-underline flex-wrap border-l-4 border-fluentGray-160 p-1  shadow transition text-fluentGray-10\"\n        css={{\n          backgroundImage: pattern.toDataUrl(),\n        }}\n      >\n        <h2 className=\"font-bold text-lg\">\n          {title}\n          {status === \"draft\" ? (\n            <TagLabel className=\"inline bg-pink-500\">draft</TagLabel>\n          ) : null}\n          <TagLabel className={`label-${type}`}>{type.toUpperCase()}</TagLabel>\n        </h2>\n      </Link>\n      <p\n        className=\"text-left p-2 text-fluentGray-120 \"\n        css={{\n          background: \"linear-gradient(#323130, #0000)\",\n          backgroundClip: \"text\",\n          WebkitTextFillColor: \"transparent\",\n        }}\n      >\n        {excerpt}\n      </p>\n    </div>\n  )\n}\n\ninterface LinkToPostProps {\n  to: string\n  title: string\n  excerpt: string\n  status: string\n  type: Post[\"type\"]\n  css?: InterpolationWithTheme<any>\n}\n\nconst TagLabel: React.FC<TagLabelProps> = props => (\n  <label\n    className={`ml-2 px-2 rounded font-semibold tracking-none ${props.className}`}\n  >\n    {props.children}\n  </label>\n)\ninterface TagLabelProps {\n  className?: string\n}\n","import React from \"react\"\nimport WrapperRoot from \"../../components/wrappers/Wrapper\"\nimport { graphql } from \"gatsby\"\nimport LinkToPost from \"../../components/blog/LinkToPost\"\nimport { BlogIndexQuery } from \"../../../types/graphqlTypes\"\n\nconst BlogIndex = ({ data }: { data: BlogIndexQuery }) => {\n  const posts = data.allSitePage.edges\n  return (\n    <WrapperRoot>\n      <h1 className=\"text-center text-200 font-bold\">kkrnme-blog</h1>\n      <article className=\"p-1\">\n        <ul className=\"list-none p-0 sm:flex-wrap sm:flex \">\n          {posts.map(({ node: post }) => (\n            <li\n              className=\"w-full sm:w-1/2 lg:w-1/3 p-1\"\n              key={post.context?.post?.node?.id ?? undefined}\n            >\n              <LinkToPost\n                to={post.context?.post?.node?.path ?? err}\n                title={post.context?.post?.node?.title ?? err}\n                excerpt={post.context?.post?.node?.excerpt ?? err}\n                status={post.context?.post?.node?.status ?? err}\n                type={post.context?.post?.type as \"adoc\" | \"mdx\"}\n              />\n            </li>\n          ))}\n        </ul>\n      </article>\n    </WrapperRoot>\n  )\n}\nconst err = `Recieved null/undefined in ${__filename}`\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    allSitePage(\n      sort: { fields: context___post___node___date, order: ASC }\n      filter: { path: { regex: \"/^/blog/.+/\" } }\n    ) {\n      edges {\n        node {\n          context {\n            post {\n              node {\n                date\n                excerpt\n                path\n                title\n                status\n                id\n              }\n              type\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default BlogIndex\n"],"sourceRoot":""}