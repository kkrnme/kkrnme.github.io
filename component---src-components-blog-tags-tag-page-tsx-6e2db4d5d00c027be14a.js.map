{"version":3,"sources":["webpack:///./src/components/blog/tags/TagPage.tsx","webpack:///./src/components/templates/BlogPageWithoutTOC.tsx","webpack:///./src/components/blog/LinkToPost.tsx","webpack:///./src/components/templates/blog/PostList.tsx"],"names":["TagPage","pageContext","description","title","tag","className","icon","faTag","to","faCalendarDay","faTags","edges","posts","BlogPageWithoutTOC","props","BlogWrapper","children","excerpt","status","pattern","GeoPattern","generate","css","Object","assign","toDataUrl","PostList","map","node","key","id","undefined","LinkToPost","frontmatter","path"],"mappings":"6FAAA,uIASaA,EAAU,SAAC,GAIlB,IAHJC,EAGI,EAHJA,YAIA,OACE,YAAC,IAAD,CACEC,YAAY,0BACZC,MAAO,UAAYF,EAAYG,KAE/B,kBAAIC,UAAU,kCACZ,YAAC,IAAD,CAAiBC,KAAMC,MACtBN,EAAYG,KAEf,iBAAGC,UAAU,eACX,YAAC,IAAD,CAAeG,GAAG,SAAlB,MAEE,YAAC,IAAD,CAAiBF,KAAMG,OACR,IACjB,YAAC,IAAD,CAAeD,GAAI,cACjB,YAAC,IAAD,CAAiBF,KAAMI,MADzB,SAKF,uBAASL,UAAU,OACjB,YAAC,IAAD,CAAUM,MAAOV,EAAYW,WAMtBZ,a,+UCnCR,IAAMa,EAAqC,SAAAC,GAAK,OACrD,YAAC,IAAD,KACMA,EADN,CAEEC,YAAa,gBAAGC,EAAH,EAAGA,SAAH,OACX,YAAC,IAAD,CAAUX,UAAU,wBAAwBW,S,0MCHnC,WAACF,GAA2B,IACjCN,EAA0CM,EAA1CN,GAAIL,EAAsCW,EAAtCX,MAAOc,EAA+BH,EAA/BG,QAAiBZ,GAAcS,EAAtBI,OAAsBJ,EAAdT,WAClCc,EAAUC,IAAWC,SAASlB,GAChC,OACE,YAAC,OAAD,CACEK,GAAIA,EACJH,UACE,8EACAA,EAEFiB,IAAKC,OAAOC,OAAP,EAOHV,EAAMQ,MAGR,mBACEjB,UAAU,0FACViB,IAAKA,YAAF,oBACmBH,EAAQM,YAD3B,gFAOH,kBAAIpB,UAAU,WACZ,oBAAMA,UAAU,eAAeF,KAGnC,iBAAGE,UAAU,gCAAgCY,KCJpCS,IA/BS,SAAC,GAAD,IAAUd,EAAV,EAAGD,MAAH,OACtB,kBAAIN,UAAU,uCACXO,EAAMe,KAAI,wBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAIvB,UAAU,+BAA+BwB,IAAG,UAAED,EAAKE,UAAP,aAAaC,GAC3D,YAACC,EAAD,CACExB,GAAI,oBAAWoB,EAAKK,mBAAhB,aAAW,EAAkBC,MACjC/B,MAAK,UAAEyB,EAAKK,mBAAP,aAAE,EAAkB9B,MACzBc,QAASW,EAAKX,QACdC,OAAM,UAAEU,EAAKK,mBAAP,aAAE,EAAkBf","file":"component---src-components-blog-tags-tag-page-tsx-6e2db4d5d00c027be14a.js","sourcesContent":["import { faCalendarDay, faTag, faTags } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React from \"react\"\nimport { MdxEdge } from \"../../../../types/graphqlTypes\"\nimport { BlogPageWithoutTOC } from \"../../templates/BlogPageWithoutTOC\"\nimport SwipingAnchor from \"../general/SwipingAnchor\"\nimport LinkToPost from \"../LinkToPost\"\nimport PostList from \"../../templates/blog/PostList\"\n\nexport const TagPage = ({\n  pageContext,\n}: {\n  pageContext: { posts: MdxEdge[]; tag: string }\n}) => {\n  return (\n    <BlogPageWithoutTOC\n      description=\"エンジニア系高校生のグダいブログ。タグ別目次。\"\n      title={\"List of\" + pageContext.tag}\n    >\n      <h1 className=\"text-center text-200 font-bold\">\n        <FontAwesomeIcon icon={faTag} />\n        {pageContext.tag}\n      </h1>\n      <p className=\"text-center\">\n        <SwipingAnchor to=\"/blog\">\n          日付順\n          <FontAwesomeIcon icon={faCalendarDay} />\n        </SwipingAnchor>{\" \"}\n        <SwipingAnchor to={\"/blog/tags\"}>\n          <FontAwesomeIcon icon={faTags} />\n          タグ一覧\n        </SwipingAnchor>\n      </p>\n      <article className=\"p-1\">\n        <PostList edges={pageContext.posts} />\n      </article>\n    </BlogPageWithoutTOC>\n  )\n}\n\nexport default TagPage\n","import { Meta } from \"./templates\"\nimport React from \"react\"\nimport { BlogMain } from \"./BlogMain\"\nimport { BlogPage } from \"./BlogPage\"\n\nexport const BlogPageWithoutTOC: React.FC<Meta> = props => (\n  <BlogPage\n    {...props}\n    BlogWrapper={({ children }) => (\n      <BlogMain className=\"mx-auto sm:my-2 my-0\">{children}</BlogMain>\n    )}\n  ></BlogPage>\n)\n","import { css } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\nimport GeoPattern from \"geopattern\"\nimport React from \"react\"\nimport { Stylable } from \"../Components\"\n\nexport default (props: LinkToPostProps) => {\n  const { to, title, excerpt, status, className } = props,\n    pattern = GeoPattern.generate(title)\n  return (\n    <Link\n      to={to}\n      className={\n        \"block shadow-md rounded rounded-tl-none overflow-hidden h-full bg-gray-800 \" +\n        className\n      }\n      css={Object.assign(\n        css`\n          transition: 150ms filter ease-in-out;\n          &:hover {\n            filter: brightness(1.1);\n          }\n        `,\n        props.css\n      )}\n    >\n      <div\n        className=\"no-underline flex-wrap border-l-4 border-yellow-400 p-1 shadow transition text-gray-200\"\n        css={css`\n          background-image: ${pattern.toDataUrl()};\n          background-size: contain;\n          background-attachment: fixed;\n          filter: saturate(180%);\n        `}\n      >\n        <h2 className=\"text-lg\">\n          <span className=\"text-shadow\">{title}</span>\n        </h2>\n      </div>\n      <p className=\"text-left p-2 text-gray-500 \">{excerpt}</p>\n    </Link>\n  )\n}\n\ntype LinkToPostProps = {\n  to: string\n  title: string\n  excerpt: string\n  status: string\n} & Stylable\n","import React from \"react\"\nimport LinkToPost from \"../../blog/LinkToPost\"\nimport { Mdx } from \"../../../../types/graphqlTypes\"\n\nexport const PostList = ({ edges: posts }: PostListProps) => (\n  <ul className=\"list-none p-0 sm:flex-wrap sm:flex \">\n    {posts.map(({ node }) => (\n      <li className=\"w-full sm:w-1/2 lg:w-1/3 p-1\" key={node.id ?? undefined}>\n        <LinkToPost\n          to={\"/blog/\" + node.frontmatter?.path!}\n          title={node.frontmatter?.title!}\n          excerpt={node.excerpt}\n          status={node.frontmatter?.status!}\n        />\n      </li>\n    ))}\n  </ul>\n)\n\nexport type PostListProps = {\n  edges: {\n    node: {\n      frontmatter?: Nully<{\n        path: string\n        title: string\n        status: string\n      }> | null\n      excerpt: string\n      id: string\n    }\n  }[]\n}\n\ntype Nully<T> = { [P in keyof T]?: T[P] | undefined | null }\n\nexport default PostList\n"],"sourceRoot":""}