{"version":3,"sources":["webpack:///./src/components/templates/BlogPageWithoutTOC.tsx","webpack:///./src/components/blog/LinkToPost.tsx","webpack:///./src/components/templates/blog/PostList.tsx","webpack:///./src/pages/blog/index.tsx"],"names":["BlogPageWithoutTOC","props","BlogWrapper","children","className","to","title","excerpt","status","pattern","GeoPattern","generate","css","Object","assign","toDataUrl","PostList","posts","edges","map","node","key","id","undefined","LinkToPost","frontmatter","path","pageQuery","BlogIndex","data","allMdx","description","icon","faCalendarDay","faArrowRight","faTags"],"mappings":"wYAKO,IAAMA,EAAqC,SAAAC,GAAK,OACrD,YAAC,IAAD,KACMA,EADN,CAEEC,YAAa,gBAAGC,EAAH,EAAGA,SAAH,OACX,YAAC,IAAD,CAAUC,UAAU,wBAAwBD,S,0MCHnC,WAACF,GAA2B,IACjCI,EAA0CJ,EAA1CI,GAAIC,EAAsCL,EAAtCK,MAAOC,EAA+BN,EAA/BM,QAAiBH,GAAcH,EAAtBO,OAAsBP,EAAdG,WAClCK,EAAUC,IAAWC,SAASL,GAChC,OACE,YAAC,OAAD,CACED,GAAIA,EACJD,UACE,8EACAA,EAEFQ,IAAKC,OAAOC,OAAP,EAOHb,EAAMW,MAGR,mBACER,UAAU,0FACVQ,IAAKA,YAAF,oBACmBH,EAAQM,YAD3B,gFAOH,kBAAIX,UAAU,WACZ,oBAAMA,UAAU,eAAeE,KAGnC,iBAAGF,UAAU,gCAAgCG,KCJpCS,IA/BS,SAAC,GAAD,IAAUC,EAAV,EAAGC,MAAH,OACtB,kBAAId,UAAU,uCACXa,EAAME,KAAI,wBAAGC,EAAH,EAAGA,KAAH,OACT,kBAAIhB,UAAU,+BAA+BiB,IAAG,UAAED,EAAKE,UAAP,aAAaC,GAC3D,YAACC,EAAD,CACEnB,GAAI,oBAAWe,EAAKK,mBAAhB,aAAW,EAAkBC,MACjCpB,MAAK,UAAEc,EAAKK,mBAAP,aAAE,EAAkBnB,MACzBC,QAASa,EAAKb,QACdC,OAAM,UAAEY,EAAKK,mBAAP,aAAE,EAAkBjB,gB,kCCZpC,mJAuCamB,EAAY,aAoBVC,UA7CG,SAAC,GAAuC,IAClDV,EADkD,EAArCW,KACAC,OAAOZ,MAC1B,OACE,YAAC,IAAD,CACEZ,MAAM,OACNyB,YAAY,uCAEZ,kBAAI3B,UAAU,kCAAd,eACA,iBAAGA,UAAU,eACX,YAAC,IAAD,CAAeC,GAAG,cAAlB,MAEE,YAAC,IAAD,CAAiB2B,KAAMC,MAAkB,IACzC,YAAC,IAAD,CAAiBD,KAAME,MAAiB,IACxC,YAAC,IAAD,CAAiBF,KAAMG,MAJzB,SAQF,uBAAS/B,UAAU,OACjB,YAAC,IAAD,CAAUc,MAAOA,Q","file":"component---src-pages-blog-index-tsx-c90c636f107e7c4d23b6.js","sourcesContent":["import { Meta } from \"./templates\"\nimport React from \"react\"\nimport { BlogMain } from \"./BlogMain\"\nimport { BlogPage } from \"./BlogPage\"\n\nexport const BlogPageWithoutTOC: React.FC<Meta> = props => (\n  <BlogPage\n    {...props}\n    BlogWrapper={({ children }) => (\n      <BlogMain className=\"mx-auto sm:my-2 my-0\">{children}</BlogMain>\n    )}\n  ></BlogPage>\n)\n","import { css } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\nimport GeoPattern from \"geopattern\"\nimport React from \"react\"\nimport { Stylable } from \"../Components\"\n\nexport default (props: LinkToPostProps) => {\n  const { to, title, excerpt, status, className } = props,\n    pattern = GeoPattern.generate(title)\n  return (\n    <Link\n      to={to}\n      className={\n        \"block shadow-md rounded rounded-tl-none overflow-hidden h-full bg-gray-800 \" +\n        className\n      }\n      css={Object.assign(\n        css`\n          transition: 150ms filter ease-in-out;\n          &:hover {\n            filter: brightness(1.1);\n          }\n        `,\n        props.css\n      )}\n    >\n      <div\n        className=\"no-underline flex-wrap border-l-4 border-yellow-400 p-1 shadow transition text-gray-200\"\n        css={css`\n          background-image: ${pattern.toDataUrl()};\n          background-size: contain;\n          background-attachment: fixed;\n          filter: saturate(180%);\n        `}\n      >\n        <h2 className=\"text-lg\">\n          <span className=\"text-shadow\">{title}</span>\n        </h2>\n      </div>\n      <p className=\"text-left p-2 text-gray-500 \">{excerpt}</p>\n    </Link>\n  )\n}\n\ntype LinkToPostProps = {\n  to: string\n  title: string\n  excerpt: string\n  status: string\n} & Stylable\n","import React from \"react\"\nimport LinkToPost from \"../../blog/LinkToPost\"\nimport { Mdx } from \"../../../../types/graphqlTypes\"\n\nexport const PostList = ({ edges: posts }: PostListProps) => (\n  <ul className=\"list-none p-0 sm:flex-wrap sm:flex \">\n    {posts.map(({ node }) => (\n      <li className=\"w-full sm:w-1/2 lg:w-1/3 p-1\" key={node.id ?? undefined}>\n        <LinkToPost\n          to={\"/blog/\" + node.frontmatter?.path!}\n          title={node.frontmatter?.title!}\n          excerpt={node.excerpt}\n          status={node.frontmatter?.status!}\n        />\n      </li>\n    ))}\n  </ul>\n)\n\nexport type PostListProps = {\n  edges: {\n    node: {\n      frontmatter?: Nully<{\n        path: string\n        title: string\n        status: string\n      }> | null\n      excerpt: string\n      id: string\n    }\n  }[]\n}\n\ntype Nully<T> = { [P in keyof T]?: T[P] | undefined | null }\n\nexport default PostList\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport LinkToPost from \"../../components/blog/LinkToPost\"\nimport { BlogIndexQuery } from \"../../../types/graphqlTypes\"\nimport { BlogPageWithoutTOC } from \"../../components/templates/BlogPageWithoutTOC\"\nimport PostList from \"../../components/templates/blog/PostList\"\nimport SwipingAnchor from \"../../components/blog/general/SwipingAnchor\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faTags,\n  faArrowRight,\n  faCalendarDay,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nconst BlogIndex = ({ data }: { data: BlogIndexQuery }) => {\n  const edges = data.allMdx.edges\n  return (\n    <BlogPageWithoutTOC\n      title=\"BLOG\"\n      description=\"プログラミングそこそこ好き高校生、もみにすのブログです。45%手作り。\"\n    >\n      <h1 className=\"text-center text-200 font-bold\">kkrnme-blog</h1>\n      <p className=\"text-center\">\n        <SwipingAnchor to=\"/blog/tags\">\n          日付順\n          <FontAwesomeIcon icon={faCalendarDay} />{\" \"}\n          <FontAwesomeIcon icon={faArrowRight} />{\" \"}\n          <FontAwesomeIcon icon={faTags} />\n          タグ一覧\n        </SwipingAnchor>\n      </p>\n      <article className=\"p-1\">\n        <PostList edges={edges} />\n      </article>\n    </BlogPageWithoutTOC>\n  )\n}\nconst err = `Recieved null/undefined in ${__filename}`\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            path\n            tags\n            title\n            status\n          }\n          timeToRead\n          id\n        }\n      }\n    }\n  }\n`\n\nexport default BlogIndex\n"],"sourceRoot":""}