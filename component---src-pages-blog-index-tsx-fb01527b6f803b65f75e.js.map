{"version":3,"sources":["webpack:///./src/components/templates/BlogMain.tsx","webpack:///./src/components/templates/BlogPageWithoutTOC.tsx","webpack:///./src/components/templates/GrayBackground.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/templates/BlogPage.tsx","webpack:///./src/components/blog/LinkToPost.tsx","webpack:///./src/pages/blog/index.tsx"],"names":["BlogMain","children","className","BlogPageWithoutTOC","props","BlogWrapper","GrayBackground","PrimitiveBackground","SiteFooter","SwipingAnchor","to","ListLink","icon","SiteHeader","faHome","faBlog","BlogPage","description","title","excerpt","status","pattern","GeoPattern","generate","css","toDataUrl","TagLabel","err","__filename","pageQuery","BlogIndex","posts","data","allMdx","edges","map","post","node","key","id","undefined","frontmatter","path"],"mappings":"6FAAA,4DAEaA,EAA6C,SAAC,GAAD,IACxDC,EADwD,EACxDA,SACAC,EAFwD,EAExDA,UAFwD,OAIxD,oBACEA,UACE,4JAICA,UAAa,KAGfD,K,+UCVE,IAAME,EAAqC,SAAAC,GAAK,OACrD,YAAC,IAAD,KACMA,EADN,CAEEC,YAAa,gBAAGJ,EAAH,EAAGA,SAAH,OACX,YAAC,IAAD,CAAUC,UAAU,wBAAwBD,S,mSCC3C,IAAMK,EAAiC,SAAAF,GAAK,OACjD,YAACG,EAAA,EAAD,KACMH,EADN,CAEEF,UAAU,gC,YCGCM,EAdW,kBACxB,sBAAQN,UAAU,eAChB,qBACG,aACD,YAACO,EAAA,EAAD,CAAeC,GAAG,8CAAlB,gBAGC,oBACD,YAACD,EAAA,EAAD,CAAeC,GAAG,0CAAlB,uB,oCCqBAC,EAAW,SAAC,GAAD,IACfV,EADe,EACfA,SACAS,EAFe,EAEfA,GACAE,EAHe,EAGfA,KAHe,OASf,kBAAIV,UAAU,aACZ,YAAC,OAAD,CAAMQ,GAAIA,EAAIR,UAAU,2BACtB,oBAAMA,UAAU,IACd,YAAC,IAAD,CAAiBU,KAAMA,EAAMV,UAAU,aACvC,wBAAOD,OAMAY,EAzCW,WACxB,OACE,sBAAQX,UAAU,uDAChB,mBACEA,UAAU,kEAKV,kBAAIA,UAAU,kCACZ,YAAC,EAAD,CAAUQ,GAAG,IAAIE,KAAME,KAAvB,QAGA,YAAC,EAAD,CAAUJ,GAAG,SAASE,KAAMG,KAA5B,YCtBV,kCAMO,IAAMC,EAAoC,SAAAZ,GAAK,OACpD,YAAC,EAAD,CAAgBa,YAAab,EAAMa,YAAaC,MAAOd,EAAMc,OAC3D,YAAC,EAAD,MACA,YAACd,EAAMC,YAAP,CAAmBJ,SAAUG,EAAMH,WAEnC,YAAC,EAAD,S,kCCXJ,iD,GAAA,U,gGAKe,gBAAqD,IAAlDS,EAAkD,EAAlDA,GAAIQ,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAC9BC,EAAUC,IAAWC,SAASL,GACpC,OACE,YAAC,OAAD,CACER,GAAIA,EACJR,UAAU,6EACVsB,IAAG,GAOH,mBACEtB,UAAU,0FACVsB,IAAKA,YAAF,oBACmBH,EAAQI,YAD3B,gFAOH,kBAAIvB,UAAU,WACZ,oBAAMA,UAAU,eAAegB,GACnB,UAAXE,EACC,YAACM,EAAD,CAAUxB,UAAU,kBAApB,SACE,OAGR,iBAAGA,UAAU,gCAAgCiB,KAanD,IAAMO,EAAoC,SAAAtB,GAAK,OAC7C,qBACEF,UAAS,iDAAmDE,EAAMF,WAEjEE,EAAMH,Y,kCCnDX,+GAkCM0B,EAAM,8BAA8BC,EAE7BC,EAAY,aAoBVC,UAlDG,SAAC,GAAuC,IAClDC,EADkD,EAArCC,KACAC,OAAOC,MAC1B,OACE,YAAC,IAAD,CACEhB,MAAM,OACND,YAAY,uCAEZ,kBAAIf,UAAU,kCAAd,eACA,uBAASA,UAAU,OACjB,kBAAIA,UAAU,uCACX6B,EAAMI,KAAI,gCAASC,EAAT,EAAGC,KAAH,OACT,kBACEnC,UAAU,+BACVoC,IAAG,UAAEF,EAAKG,UAAP,aAAaC,GAEhB,YAAC,IAAD,CACE9B,GAAE,UAAE,oBAAW0B,EAAKK,mBAAhB,aAAW,EAAkBC,aAA/B,QAAuCf,EACzCT,MAAK,oBAAEkB,EAAKK,mBAAP,aAAE,EAAkBvB,aAApB,QAA6BS,EAClCR,QAAO,UAAEiB,EAAKjB,eAAP,QAAkBQ,EACzBP,OAAM,oBAAEgB,EAAKK,mBAAP,aAAE,EAAkBrB,cAApB,QAA8BO,a","file":"component---src-pages-blog-index-tsx-fb01527b6f803b65f75e.js","sourcesContent":["import React from \"react\"\n\nexport const BlogMain: React.FC<{ className?: string }> = ({\n  children,\n  className,\n}) => (\n  <main\n    className={\n      \"text-base tracking-09 rounded-none sm:rounded-lg \\\n  container overflow-hidden \\\n  mx-auto  \\\n  transition selection-green border-0 sm:border border-gray-700 \" +\n      (className ?? \"\")\n    }\n  >\n    {children}\n  </main>\n)\n","import { Meta } from \"./templates\"\nimport React from \"react\"\nimport { BlogMain } from \"./BlogMain\"\nimport { BlogPage } from \"./BlogPage\"\n\nexport const BlogPageWithoutTOC: React.FC<Meta> = props => (\n  <BlogPage\n    {...props}\n    BlogWrapper={({ children }) => (\n      <BlogMain className=\"mx-auto sm:my-2 my-0\">{children}</BlogMain>\n    )}\n  ></BlogPage>\n)\n","import { Meta } from \"./templates\"\n\nimport { PrimitiveBackground } from \"./PrimitiveBackground\"\n\nimport React from \"react\"\n\n/**\n * Background\n * @param props\n */\nexport const GrayBackground: React.FC<Meta> = props => (\n  <PrimitiveBackground\n    {...props}\n    className=\"bg-gray-900 text-gray-400\"\n  ></PrimitiveBackground>\n)\n","import React from \"react\"\nimport SwipingAnchor from \"./blog/general/SwipingAnchor\"\nexport const SiteFooter = () => (\n  <footer className=\"text-center\">\n    <p>\n      {\"Hosted on \"}\n      <SwipingAnchor to=\"https://github.com/kkrnme/kkrnme.github.io\">\n        GitHub Pages\n      </SwipingAnchor>\n      {\", licensed under \"}\n      <SwipingAnchor to=\"https://github.com/kkrnme/pages-source\">\n        the MIT License.\n      </SwipingAnchor>\n    </p>\n  </footer>\n)\nexport default SiteFooter\n","import {\n  faBlog,\n  faHome,\n  IconDefinition,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Link } from \"gatsby\"\nimport React, { ReactNode } from \"react\"\n\nexport const SiteHeader = () => {\n  return (\n    <header className=\"bg-gray-900 border-b border-gray-700 px-4 shadow-md\">\n      <div\n        className=\"\n    flex items-center \n    mx-auto w-full sm:w-10/12  px-2\n     transition\"\n      >\n        <ul className=\"list-none flex p-0 self-start \">\n          <ListLink to=\"/\" icon={faHome}>\n            HOME\n          </ListLink>\n          <ListLink to=\"/blog/\" icon={faBlog}>\n            BLOG\n          </ListLink>\n        </ul>\n      </div>\n    </header>\n  )\n}\n\nconst ListLink = ({\n  children,\n  to,\n  icon,\n}: {\n  children: ReactNode\n  to: string\n  icon: IconDefinition\n}) => (\n  <li className=\"m-1 block\">\n    <Link to={to} className=\"no-underline text-white\">\n      <span className=\"\">\n        <FontAwesomeIcon icon={icon} className=\"text-150\" />\n        <span>{children}</span>\n      </span>\n    </Link>\n  </li>\n)\n\nexport default SiteHeader\n","import { GrayBackground } from \"./GrayBackground\"\nimport React from \"react\"\nimport SiteFooter from \"../Footer\"\nimport SiteHeader from \"../Header\"\nimport { Meta } from \"./templates\"\n\nexport const BlogPage: React.FC<BlogPageProps> = props => (\n  <GrayBackground description={props.description} title={props.title}>\n    <SiteHeader />\n    <props.BlogWrapper children={props.children} />\n\n    <SiteFooter />\n  </GrayBackground>\n)\n\nexport type BlogPageProps = { BlogWrapper: React.FC } & Meta\n","import { css, InterpolationWithTheme } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\nimport GeoPattern from \"geopattern\"\nimport React from \"react\"\n\nexport default ({ to, title, excerpt, status }: LinkToPostProps) => {\n  const pattern = GeoPattern.generate(title)\n  return (\n    <Link\n      to={to}\n      className=\"block shadow-md rounded rounded-tl-none overflow-hidden h-full bg-gray-800\"\n      css={css`\n        transition: 150ms filter ease-in-out;\n        &:hover {\n          filter: brightness(1.1);\n        }\n      `}\n    >\n      <div\n        className=\"no-underline flex-wrap border-l-4 border-yellow-400 p-1 shadow transition text-gray-200\"\n        css={css`\n          background-image: ${pattern.toDataUrl()};\n          background-size: contain;\n          background-attachment: fixed;\n          filter: saturate(180%);\n        `}\n      >\n        <h2 className=\"text-lg\">\n          <span className=\"text-shadow\">{title}</span>\n          {status === \"draft\" ? (\n            <TagLabel className=\"inline bg-pink\">draft</TagLabel>\n          ) : null}\n        </h2>\n      </div>\n      <p className=\"text-left p-2 text-gray-500 \">{excerpt}</p>\n    </Link>\n  )\n}\n\ninterface LinkToPostProps {\n  to: string\n  title: string\n  excerpt: string\n  status: string\n  css?: InterpolationWithTheme<any>\n}\n\nconst TagLabel: React.FC<TagLabelProps> = props => (\n  <label\n    className={`ml-2 px-2 rounded font-semibold tracking-none ${props.className}`}\n  >\n    {props.children}\n  </label>\n)\ninterface TagLabelProps {\n  className?: string\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport LinkToPost from \"../../components/blog/LinkToPost\"\nimport { BlogIndexQuery } from \"../../../types/graphqlTypes\"\nimport { BlogPageWithoutTOC } from \"../../components/templates/BlogPageWithoutTOC\"\n\nconst BlogIndex = ({ data }: { data: BlogIndexQuery }) => {\n  const posts = data.allMdx.edges\n  return (\n    <BlogPageWithoutTOC\n      title=\"BLOG\"\n      description=\"プログラミングそこそこ好き高校生、もみにすのブログです。45%手作り。\"\n    >\n      <h1 className=\"text-center text-200 font-bold\">kkrnme-blog</h1>\n      <article className=\"p-1\">\n        <ul className=\"list-none p-0 sm:flex-wrap sm:flex \">\n          {posts.map(({ node: post }) => (\n            <li\n              className=\"w-full sm:w-1/2 lg:w-1/3 p-1\"\n              key={post.id ?? undefined}\n            >\n              <LinkToPost\n                to={\"/blog/\" + post.frontmatter?.path ?? err}\n                title={post.frontmatter?.title ?? err}\n                excerpt={post.excerpt ?? err}\n                status={post.frontmatter?.status ?? err}\n              />\n            </li>\n          ))}\n        </ul>\n      </article>\n    </BlogPageWithoutTOC>\n  )\n}\nconst err = `Recieved null/undefined in ${__filename}`\n\nexport const pageQuery = graphql`\n  query BlogIndex {\n    allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            path\n            tags\n            title\n            status\n          }\n          timeToRead\n          id\n        }\n      }\n    }\n  }\n`\n\nexport default BlogIndex\n"],"sourceRoot":""}